name: Build & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Restore Dependencies
      run: dotnet restore authentication-dot-net.sln
      
    - name: Build
      run: dotnet build authentication-dot-net.sln --configuration Release

    - name: Test
      run: dotnet test authentication-dot-net.sln --no-restore --verbosity minimal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: authentication-dot-net/bin
        
    - name: Archive unit-test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: test-artifacts
        path: UnitTests/coverage.opencover.xml



    - name: Generate HTML coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator "-reports:UnitTests/coverage.opencover.xml" "-targetdir:coverage" "-reporttypes:HTMLInline_AzurePipelines"

    - name: Generate and upload coverage badge
      run: |
        coverage_percentage=$(awk '/^<td>Total<\/td>/ {getline; print substr($2, 1, length($2)-1)}' coverage/index.html)
        echo "Coverage Percentage: $coverage_percentage"

        curl -s -o coverage-badge.svg https://img.shields.io/badge/Coverage-${coverage_percentage}%25-green
        echo "::set-output name=badge_path::coverage-badge.svg"

    - name: Upload coverage badge
      uses: actions/upload-artifact@v2
      with:
        name: coverage-badge
        path: ${{ steps.get_coverage.outputs.badge_path }}
